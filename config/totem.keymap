#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/totem.h"                                       // key-position labels
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4 LB5  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4 RB5  // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                          // thumb keys

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        CapWord {
            bindings = <&caps_word>;
            key-positions = <14 15>;
        };

        CapLock {
            bindings = <&kp CAPS>;
            key-positions = <25 26>;
        };

        CapChar {
            bindings = <&sk LSHIFT>;
            key-positions = <4 5>;
        };
    };

    macros {
        gif: gif {
            label = "giphy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N2>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp G &kp I &kp F>;
        };
    };


    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-key-positions =  <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-key-positions =  <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
           &kp Q       &kp W       &kp E        &kp R        &kp T          &kp Y        &kp U          &kp I        &kp O       &kp P
           &hml LGUI A  &hml LALT S  &hml LCTRL D  &hml LSHFT F  &kp G          &kp H        &hmr RSHFT J    &hmr RCTRL K  &hmr RALT L  &mt RGUI SEMICOLON
&kp GRAVE  &kp Z       &kp X       &kp C        &kp V        &kp B          &kp N        &kp M          &kp COMMA    &kp PERIOD  &kp SLASH           &kp SQT
                                   &kp TAB      &lt 3 TAB    &lt 1 ENTER    &lt 2 SPACE  &kp BACKSPACE  &kp BSPC
            >;
        };

        nav_layer {
            label = "NAV";
            bindings = <
        &trans  &trans    &kp UP    &trans     &trans    &trans  &kp PRINTSCREEN  &kp SCROLLLOCK  &kp PAUSE_BREAK  &trans
        &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans    &trans  &hmr RSHFT INS    &hmr RCTRL HOME  &hmr RALT PG_UP   &kp RGUI
&trans  &trans  &trans    &trans    &trans     &trans    &trans  &kp DELETE       &kp END         &kp PG_DN        &trans    &trans
                          &trans    &trans     &none     &trans  &trans           &trans
            >;
        };

        sim_layer {
            label = "SYM";
            bindings = <
        &kp EXCL   &kp AT         &kp HASH              &kp DLLR              &kp PRCNT         &kp CARET        &kp AMPS           &kp ASTRK              &kp EQUAL          &kp PLUS
        &kp COLON  &kp SEMICOLON  &kp LEFT_PARENTHESIS  &kp LEFT_BRACKET      &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp APOS           &kp MINUS
&trans  &kp HASH   &kp PIPE       &kp LESS_THAN         &kp NON_US_BACKSLASH  &trans            &trans           &kp SLASH          &kp GREATER_THAN       &kp DOUBLE_QUOTES  &kp TILDE  &trans
                                  &trans                &gif                  &mo 4             &none            &trans             &trans
            >;
        };

        num_layer {
            label = "NUM";
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans  &kp KP_N7        &kp KP_N8        &kp KP_N9        &kp KP_PLUS
        &trans  &trans  &trans  &trans  &trans    &trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINUS
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp KP_N1        &kp KP_N2        &kp KP_N3        &kp KP_MULTIPLY  &kp SLASH
                        &trans  &trans  &none     &trans  &kp KP_N0        &trans
            >;
        };

        adjust_layer {
            label = "ADJ";
            bindings = <
        &sys_reset   &bt BT_CLR  &out OUT_TOG  &trans  &trans    &trans  &kp F7  &kp F8  &kp F9  &kp F12
        &bootloader  &bt BT_NXT  &trans        &trans  &trans    &trans  &kp F4  &kp F5  &kp F6  &kp F11
&trans  &trans       &bt BT_PRV  &trans        &trans  &trans    &trans  &kp F1  &kp F2  &kp F3  &kp F10  &trans
                                 &trans        &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
